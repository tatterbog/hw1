#include <iostream>

template<typename T>
T copyValue(const T& value) {
    return value; 
}

template<typename T>
T* copyValue(T* ptr) {
    if (!ptr) {
        return nullptr;         
    }
    T* ptr2 = new T(*ptr);
    return ptr2;               
}

int main() {
    int x = 5;
    std::cout << copyValue(x) << '\n';
    
    int* y = new int(5);
    int* z = copyValue(y);
    
    std::string* s = new std::string("are");
    std::string* s2 = copyValue(s);
    
    std::cout << *z << '\n';
    std::cout << *s2 << '\n';
    
    delete s;
    delete s2;
    delete y;
    delete z;
    
}