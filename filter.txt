#include <iostream>

template<typename T>
bool pred(const T& t) {
    return t > 2;
}

template<>
bool pred(const std::string& t) {
    return t.length() > 2;
}

template<typename T, typename P>
void filter(T* arr, int* size,P pred) {
    int j = 0;
    for (int i = 0; i < *size; i++) {
        if (pred(arr[i])) {
            arr[j] = arr[i];
            j++;
        }
    }
    *size = j;
}

template<typename T>
void print(T* arr, int size){
    for (int i = 0;i < size;i++) {
        std::cout << arr[i] << ' ';
    }
    std::cout << '\n';
}

int main() {
    int size1 = 4, size2 = 3, size3 = 4;
    int arr1[] = {1, 2, 3, 4};
    double arr2[] = {1.2, 2.1, 3.4};
    std::string arr3[] = {"kfs", "aw", "Avbuawv", ""};

    filter(arr1, &size1, pred<int>);
    filter(arr2, &size2, pred<double>);
    filter(arr3, &size3, pred<std::string>);
   
    print(arr1, size1);
    print(arr2, size2);
    print(arr3, size3);
    return 0;
}
